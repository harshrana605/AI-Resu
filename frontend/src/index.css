/* src/index.css */

/* Define Dark Theme Color Palette using CSS Variables */
:root {
  /* Core Colors */
  --primary-color: #A78BFA; /* Lighter Purple (Purple-400) */
  --primary-color-hover: #8B5CF6; /* Original Purple-500 */
  --primary-color-dark-hover: #7C3AED; /* Purple-600 */
  --primary-color-focus-ring: rgba(196, 181, 253, 0.5); /* Purple-300 with transparency */

  /* Background Colors */
  --background-main: #111827; /* Very Dark Blue/Gray (gray-900) */
  --background-card: #1f2937; /* Darker Blue/Gray (gray-800) */
  --background-elevated: #374151; /* Medium Dark Gray (gray-700) */
  --background-input: #374151; /* Gray-700 for inputs (was 600) */
  --background-input-hover: #4b5563; /* Gray-600 for input hover */
  --background-hover-light: #374151; /* gray-700 */
  --background-hover-dark: #111827; /* gray-900 */

  /* Text Colors */
  --text-color-light: #f3f4f6; /* Very Light Gray (gray-100) */
  --text-color-medium: #d1d5db; /* Light Gray (gray-300) */
  --text-color-muted: #9ca3af;  /* Medium Gray (gray-400) */
  --text-color-heading: #ffffff; /* White */
  --text-color-on-primary: #ffffff; /* White */
  --text-color-ai-button: var(--primary-color); /* Color for AI-related buttons/icons */
  --text-color-error: #f87171; /* Red-400 for error messages */
  --text-color-success: #4ade80; /* Green-400 for success messages */


  /* Border Colors */
  --border-color: #4b5563; /* Dark Gray (gray-600) */
  --border-color-light: #6b7280; /* Gray-500 */
  --border-color-focus: var(--primary-color);
  --border-color-dashed: #6b7280; /* Gray-500 */
  --border-color-error: var(--red); /* Red for error states */

  /* Action Colors */
  --red: #f87171;     /* Lighter Red (red-400) */
  --red-dark: #ef4444; /* Red-500 */
  --green: #4ade80;   /* Lighter Green (green-400) */
  --white: #ffffff;
  --black: #000000;

  /* UI Elements */
  --border-radius-sm: 0.25rem; /* 4px */
  --border-radius-md: 0.375rem; /* 6px */
  --border-radius-lg: 0.5rem; /* 8px */
  --border-radius-full: 9999px;

  /* Spacing Units (based on 4px scale) */
  --spacing-px: 1px;
  --spacing-0: 0;
  --spacing-1: 0.25rem; /* 4px */
  --spacing-2: 0.5rem; /* 8px */
  --spacing-3: 0.75rem; /* 12px */
  --spacing-4: 1rem; /* 16px */
  --spacing-5: 1.25rem; /* 20px */
  --spacing-6: 1.5rem; /* 24px */
  --spacing-8: 2rem; /* 32px */
  --spacing-10: 2.5rem; /* 40px */
  --spacing-12: 3rem; /* 48px */
  --spacing-16: 4rem; /* 64px */
  --spacing-20: 5rem; /* 80px */
  --spacing-24: 6rem; /* 96px */

  /* Shadows (kept subtle for dark theme) */
  --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.15);
  --shadow: 0 1px 3px 0 rgb(0 0 0 / 0.2), 0 1px 2px -1px rgb(0 0 0 / 0.15);
  --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.25), 0 2px 4px -2px rgb(0 0 0 / 0.2);
  --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.3), 0 4px 6px -4px rgb(0 0 0 / 0.25);
  --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.3), 0 8px 10px -6px rgb(0 0 0 / 0.25);
  --shadow-inner: inset 0 1px 3px 0 rgb(0 0 0 / 0.3);
}

/* Basic Reset & Global Styles */
*, *::before, *::after {
  box-sizing: border-box;
  /* Reset default margins and paddings */
  margin: 0;
  padding: 0;
  /* Ensure borders and padding are included in element's total width/height */
}

html {
  scroll-behavior: smooth; /* Smooth scroll for page jumps */
  /* Prevent text size adjustment on orientation change */
  -webkit-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  text-size-adjust: 100%;
}

body {
  /* Use Inter font with good fallbacks */
  font-family: 'Inter', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont,
    'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif,
    'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: var(--background-main);
  color: var(--text-color-light);
  line-height: 1.6; /* Slightly increased line-height for readability */
  font-size: 16px; /* Base font size */
  min-height: 100vh; /* Ensure body takes at least full viewport height */
  display: flex; /* Use flex to manage layout, e.g., for centering App */
  flex-direction: column;
}

/* Ensure root element for React app takes full height */
#root {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
}


/* Headings */
h1, h2, h3, h4, h5, h6 {
    margin-bottom: 0.75em; /* Consistent bottom margin */
    font-weight: 600; /* Semi-bold */
    color: var(--text-color-heading);
    line-height: 1.3; /* Tighter line height for headings */
}
h1 { font-size: 2rem; } /* 32px */
h2 { font-size: 1.5rem; } /* 24px - Default H2 size */
h3 { font-size: 1.25rem; } /* 20px */
h4 { font-size: 1.125rem; } /* 18px */
h5 { font-size: 1rem; } /* 16px */
h6 { font-size: 0.875rem; } /* 14px */

/* Paragraphs */
p {
    margin-bottom: 1em; /* Spacing between paragraphs */
}

/* Links */
a {
  color: var(--primary-color);
  text-decoration: none; /* Remove underline by default */
  transition: color 0.2s ease, text-decoration-color 0.2s ease;
}
a:hover {
  color: var(--primary-color-hover);
  text-decoration: underline;
  text-decoration-color: var(--primary-color-hover); /* Underline matches hover color */
}

/* Images */
img, svg, video, canvas, audio, iframe, embed, object {
    display: block; /* Remove extra space below inline images */
    max-width: 100%; /* Ensure images don't overflow containers */
    height: auto; /* Maintain aspect ratio */
    vertical-align: middle; /* Better alignment */
}

/* Horizontal Rule */
hr {
    border: 0;
    height: 1px;
    background-color: var(--border-color);
    margin: var(--spacing-6) 0; /* Add vertical spacing */
}


/* --- Global Button Styles --- */
/* Base Button - Can be applied directly or use .primary/.secondary/.danger etc. */
button,
a.button,
input[type="button"],
input[type="submit"],
input[type="reset"] {
    cursor: pointer;
    font-family: inherit; /* Use body font */
    font-size: 0.95rem; /* Slightly smaller base */
    font-weight: 500; /* Medium weight */
    border: 1px solid transparent;
    padding: var(--spacing-2) var(--spacing-4); /* 8px 16px */
    border-radius: var(--border-radius-md); /* 6px */
    transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease, opacity 0.2s ease, box-shadow 0.2s ease;
    background-color: var(--background-elevated); /* Default: secondary look */
    color: var(--text-color-light);
    display: inline-flex; /* Align icon and text */
    align-items: center;
    justify-content: center;
    gap: var(--spacing-2); /* Space between icon and text */
    line-height: 1.4; /* Prevent text squish */
    text-align: center; /* Ensure text is centered */
    white-space: nowrap; /* Prevent button text wrapping */
    user-select: none; /* Prevent text selection on click */
    -webkit-tap-highlight-color: transparent; /* Remove tap highlight on mobile */
}

/* Disabled State */
button:disabled,
a.button:disabled, /* Note: <a> doesn't have a native disabled state, use class/aria */
input[type="button"]:disabled,
input[type="submit"]:disabled,
input[type="reset"]:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    box-shadow: none;
}
/* Add [aria-disabled="true"] for accessible disabled links */
a.button[aria-disabled="true"] {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none; /* Prevent clicks */
}


/* Focus Visible State (Accessibility) */
button:focus-visible,
a.button:focus-visible,
input[type="button"]:focus-visible,
input[type="submit"]:focus-visible,
input[type="reset"]:focus-visible {
    outline: none;
    box-shadow: 0 0 0 3px var(--primary-color-focus-ring); /* Visible focus ring */
}

/* Primary Button Modifier */
button.primary, a.button.primary, input[type="submit"].primary {
    background-color: var(--primary-color);
    color: var(--text-color-on-primary);
    font-weight: 600; /* Bolder for primary action */
    border-color: var(--primary-color);
}
button.primary:hover:not(:disabled), a.button.primary:hover:not([aria-disabled="true"]), input[type="submit"].primary:hover:not(:disabled) {
    background-color: var(--primary-color-hover);
    border-color: var(--primary-color-hover);
    text-decoration: none; /* Remove underline on hover for button-styled links */
    box-shadow: var(--shadow); /* Subtle shadow on hover */
}

/* Secondary Button Modifier (Default state is already similar) */
button.secondary, a.button.secondary, input[type="button"].secondary {
    background-color: var(--background-elevated);
    color: var(--text-color-light);
    border: 1px solid var(--border-color);
}
button.secondary:hover:not(:disabled), a.button.secondary:hover:not([aria-disabled="true"]), input[type="button"].secondary:hover:not(:disabled) {
    background-color: var(--background-input); /* Use input bg for hover */
    border-color: var(--border-color-light);
    text-decoration: none;
}

/* Danger Button Modifier */
button.danger, a.button.danger {
    background-color: var(--red);
    color: var(--white);
    border-color: var(--red);
}
button.danger:hover:not(:disabled), a.button.danger:hover:not([aria-disabled="true"]) {
    background-color: var(--red-dark);
    border-color: var(--red-dark);
    text-decoration: none;
}

/* --- Global Form Input Styles --- */
input[type="text"],
input[type="email"],
input[type="tel"],
input[type="url"],
input[type="password"], /* Added password */
input[type="search"], /* Added search */
input[type="number"], /* Added number */
input[type="date"],
input[type="month"],
input[type="week"], /* Added week */
input[type="time"], /* Added time */
input[type="datetime-local"], /* Added datetime-local */
textarea,
select
{
    width: 100%; /* Take full width of parent */
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius-md); /* 6px */
    padding: var(--spacing-2) var(--spacing-3); /* 8px 12px */
    font-size: 0.95rem; /* Match button text size */
    line-height: 1.5;
    transition: border-color 0.2s ease, box-shadow 0.2s ease, background-color 0.2s ease;
    background-color: var(--background-input);
    color: var(--text-color-light);
    font-family: inherit; /* Use body font */
    appearance: none; /* Remove default styling (esp. for select/search) */
    -webkit-appearance: none;
    -moz-appearance: none;
}

/* Placeholder Text */
input::placeholder,
textarea::placeholder {
    color: var(--text-color-muted);
    opacity: 0.8; /* Make it slightly less prominent */
}

/* Hover State */
input:hover:not(:disabled):not(:read-only),
textarea:hover:not(:disabled):not(:read-only),
select:hover:not(:disabled) {
    border-color: var(--border-color-light);
    background-color: var(--background-input-hover);
}

/* Focus State */
input:focus,
textarea:focus,
select:focus {
    outline: none;
    border-color: var(--border-color-focus);
    background-color: var(--background-input); /* Keep bg consistent on focus */
    box-shadow: 0 0 0 3px var(--primary-color-focus-ring); /* Focus ring */
}

/* Disabled State */
input:disabled, textarea:disabled, select:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    background-color: var(--background-elevated); /* Slightly different background */
    border-color: var(--border-color); /* Keep border visible but muted */
}

/* Read-only State */
input:read-only, textarea:read-only {
    background-color: var(--background-elevated);
    border-color: var(--border-color);
    cursor: default; /* Indicate non-interactive */
}
input:read-only:focus, textarea:read-only:focus {
    box-shadow: none; /* No focus ring for read-only */
}


/* Select Specific Styling */
select {
    /* Match input height approx - adjust if needed */
    /* height: calc(var(--spacing-2) * 2 + var(--spacing-3) * 2 + 1.5em); */
    padding-right: var(--spacing-8); /* More space for custom arrow */
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3E%3Cpath stroke='%239ca3af' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3E%3C/svg%3E"); /* Custom arrow (gray-400) */
    background-repeat: no-repeat;
    background-position: right var(--spacing-3) center;
    background-size: 1em 1em;
}
select:disabled {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3E%3Cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3E%3C/svg%3E"); /* Darker arrow when disabled (gray-500) */
}

/* Textarea Specific Styling */
textarea {
    resize: vertical; /* Allow vertical resize only */
    min-height: 100px; /* Default minimum height */
    display: block; /* Ensure it behaves like a block element */
}

/* Checkbox and Radio Button Styling (Basic - customize further if needed) */
input[type="checkbox"],
input[type="radio"] {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    width: 1.1em;
    height: 1.1em;
    border: 1px solid var(--border-color-light);
    border-radius: var(--border-radius-sm);
    margin-right: var(--spacing-2);
    vertical-align: middle; /* Align with label text */
    cursor: pointer;
    position: relative; /* For pseudo-elements */
    transition: background-color 0.2s ease, border-color 0.2s ease;
    background-color: var(--background-input);
}
input[type="radio"] {
    border-radius: 50%; /* Make radios round */
}

input[type="checkbox"]:hover,
input[type="radio"]:hover {
    border-color: var(--primary-color);
}

input[type="checkbox"]:checked,
input[type="radio"]:checked {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
}

/* Checkmark for Checkbox */
input[type="checkbox"]:checked::before {
    content: '';
    display: block;
    width: 0.6em;
    height: 0.3em;
    border: solid var(--text-color-on-primary);
    border-width: 0 0 2px 2px;
    transform: rotate(-45deg) translate(-50%, -50%);
    position: absolute;
    left: 50%;
    top: 50%;
    margin-top: -1px; /* Fine-tune position */
}

/* Dot for Radio */
input[type="radio"]:checked::before {
    content: '';
    display: block;
    width: 0.5em;
    height: 0.5em;
    background-color: var(--text-color-on-primary);
    border-radius: 50%;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
}

input[type="checkbox"]:focus-visible,
input[type="radio"]:focus-visible {
    outline: none;
    box-shadow: 0 0 0 3px var(--primary-color-focus-ring);
}

input[type="checkbox"]:disabled,
input[type="radio"]:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    border-color: var(--border-color);
}
input[type="checkbox"]:disabled:checked,
input[type="radio"]:disabled:checked {
    background-color: var(--border-color); /* Muted checked state */
}
input[type="checkbox"]:disabled:checked::before,
input[type="radio"]:disabled:checked::before {
    border-color: var(--background-elevated); /* Adjust check/dot color if needed */
    background-color: var(--background-elevated);
}


/* Form Labels */
label {
    display: block; /* Ensure labels are block-level */
    margin-bottom: var(--spacing-1); /* Space below label */
    font-weight: 500; /* Medium weight */
    color: var(--text-color-medium); /* Slightly lighter than main text */
    font-size: 0.9rem; /* Slightly smaller */
}

/* Form Groups (Utility class for spacing) */
.form-group {
    margin-bottom: var(--spacing-4); /* Space between form groups */
}


/* --- Utility Classes --- */

/* Screen Reader Only */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

/* Clearfix (Legacy, use Flex/Grid instead where possible) */
.clearfix::after {
  content: "";
  display: table;
  clear: both;
}

/* Text Alignment */
.text-left { text-align: left; }
.text-center { text-align: center; }
.text-right { text-align: right; }
.text-justify { text-align: justify; }

/* --- Scrollbar Styling (Webkit - Chrome, Safari, Edge) --- */
::-webkit-scrollbar {
  width: 10px; /* Width of vertical scrollbar */
  height: 10px; /* Height of horizontal scrollbar */
}
::-webkit-scrollbar-track {
  background: var(--background-main); /* Track color */
  border-radius: 10px;
}
::-webkit-scrollbar-thumb {
  background-color: var(--background-elevated); /* Thumb color */
  border-radius: 10px;
  border: 2px solid var(--background-main); /* Creates padding around thumb */
}
::-webkit-scrollbar-thumb:hover {
  background-color: var(--border-color); /* Darker thumb on hover */
}
::-webkit-scrollbar-corner {
    background: var(--background-main); /* Color of the corner where vertical/horizontal bars meet */
}

/* Scrollbar Styling (Firefox) */
* {
  scrollbar-width: thin; /* "auto" or "thin" */
  scrollbar-color: var(--background-elevated) var(--background-main); /* thumb track */
}

/* --- Basic Layout Structure --- */
/* Example: A simple container */
.container {
    width: 100%;
    max-width: 1200px; /* Example max width */
    margin-left: auto;
    margin-right: auto;
    padding-left: var(--spacing-4); /* Add horizontal padding */
    padding-right: var(--spacing-4);
}

/* Example: Flex container */
.flex-container {
    display: flex;
    gap: var(--spacing-4); /* Default gap */
}
.flex-col { flex-direction: column; }
.items-center { align-items: center; }
.justify-center { justify-content: center; }
.justify-between { justify-content: space-between; }
/* Add more flex utilities as needed */

/* Example: Grid container */
.grid-container {
    display: grid;
    gap: var(--spacing-4); /* Default gap */
}
/* Add grid column templates etc. as needed */


/* --- Responsive Design --- */
/* Example Media Query */
@media (max-width: 768px) {
    /* Adjust styles for smaller screens */
    h1 { font-size: 1.75rem; }
    h2 { font-size: 1.375rem; }
    body { font-size: 15px; }
    .container { padding-left: var(--spacing-3); padding-right: var(--spacing-3); }
}

@media (max-width: 480px) {
    /* Further adjustments for mobile */
    h1 { font-size: 1.5rem; }
    h2 { font-size: 1.25rem; }
    /* Make buttons slightly larger tap targets */
    button, a.button, input[type="button"], input[type="submit"], input[type="reset"] {
        padding: var(--spacing-3) var(--spacing-4);
    }
}
